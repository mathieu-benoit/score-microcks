- uri: cmd://bash#endpoint-with-microcks-cli
  type: endpoint
  description: Outputs an endpoint URL for connecting to an other workload (a Microcks mock is generated if not found).
  expected_outputs:
    - url
  args:
  - -c
  - |
    STDIN=$(cat)
    PARAM_WORKLOAD=$(echo $STDIN | yq eval -p json '.resource_id | split(".") | .[-1]')
    PARAM_PORT=$(echo $STDIN | yq eval -p json '.resource_params.port')
    WORKLOAD_EXISTS=$(echo $STDIN | PARAM_WORKLOAD=${PARAM_WORKLOAD} yq eval -p json '.workload_services | has(strenv(PARAM_WORKLOAD))')
    HOSTNAME=${PARAM_WORKLOAD}
    PORT=${PARAM_PORT}
    SCHEME="http"
    PATH=""
    if [ "$WORKLOAD_EXISTS" != "true" ]; then
      HOSTNAME="microcks.127.0.0.1.nip.io"
      SCHEME="https"
      PATH="/rest/Order+Service+API"
      microcks-cli import /resources/${PARAM_WORKLOAD}-openapi.yaml:true --microcksURL=https://${HOSTNAME}/api --insecure --keycloakClientId=foo --keycloakClientSecret=bar >&2
    fi
    OUTPUTS='{"resource_outputs":{"url":"%s://%s:%s%s"},"manifests":[]}'
    printf "$OUTPUTS" "$SCHEME" "$HOSTNAME" "$PORT" "$PATH"